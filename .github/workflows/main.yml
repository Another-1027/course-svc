name: course-svc
on: 
 push: 
  branches: 
   - main
env:
  AWS_REGION: ap-southeast-1                      # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: course                          # set this to your Amazon ECR repository name
  ECS_SERVICE: course-admin-server                     # set this to your Amazon ECS service name
  ECS_CLUSTER: yourEcsCluster                     # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: yourTaskDefinitionFileName # set this to the path to your Amazon ECS task definition file, e.g. task-definition.json
  CONTAINER_NAME: yourContainerName
  # set this to the name of the container in the
  # containerDefinitions section of your task definition
jobs:
 build:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Set up JDK 17
       uses: actions/setup-java@v3
       with:
         java-version: '17'
         distribution: 'temurin'
         cache: maven
     - name: Build with Maven
       run: |
         mvn -B package --file pom.xml

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

     - name: Build, tag, and push image to Amazon ECR A
       id: build-admin-server-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         IMAGE_TAG: ${{ github.sha }}
         PROJECT_NAME: course-admin-server
       run: |
           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$PROJECT_NAME-$IMAGE_TAG $PROJECT_NAME
           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$PROJECT_NAME-$IMAGE_TAG
           echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$PROJECT_NAME-$IMAGE_TAG" >> $GITHUB_OUTPUT

     - name: AWS SSM Send-Command
       uses: peterkimzz/aws-ssm-send-command@master
       id: deploy-admin-server-ssm
       env:
         IMAGE_NAME: ${{ steps.build-admin-server-image.outputs.image }}
       with:
         aws-region: ${{ env.AWS_REGION }}
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         instance-ids: ${{ secrets.INSTANCE_ID }}
         working-directory: /home/course/admin-server
         command: export IMAGE_NAME=$IMAGE_NAME && docker-compose up -d
         comment: Hello world!
     - name: Get the outputs
       run: echo "The Command id is ${{ steps.ssm.outputs.command-id }}"

